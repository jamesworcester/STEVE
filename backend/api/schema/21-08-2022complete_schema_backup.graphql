type Address {
	id: ID!
	client_id: String
	postcode_id: String!
	street_number: String!
	street_name: String!
	apartment_number: String!
	level: String!
	photo_filename: String!
	photo_data: String!
}

type Assigned_Survey {
	id: ID!
	survey_id: String!
	assigned_to: String!
	assigned_by: String!
	assigned_date_time: AWSTimestamp!
	end_assignment: AWSTimestamp!
	frequency_of_survey_days: Int!
	answered_date_time: AWSTimestamp!
}

type Assigned_TaskAchievement {
	id: ID!
	user_id: String!
	taskachievement_id: String!
	assigned_date_time: AWSTimestamp!
	end_on: AWSTimestamp!
	is_completed: Int!
}

type Channel {
	id: ID!
	channel_type: String!
	channel_text: String!
	description: String!
	picture_filename: String!
	picture_data: String!
}

type Client {
	id: ID!
	address_id: String
	name: String!
	photo_filename: String!
	photo_data: String!
	industry: String!
	contact_first_name: String!
	contact_last_name: String!
	contact_email: String!
	contact_phone: String!
}

type Comment {
	id: ID!
	post_id: String!
	user_id: String!
	content: String!
	created_date_time: AWSTimestamp!
	edited_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp
}

type Country {
	id: ID!
	name: String!
}

input CreateAddressInput {
	client_id: String
	postcode_id: String!
	street_number: String!
	street_name: String!
	apartment_number: String!
	level: String!
	photo_filename: String!
	photo_data: String!
}

input CreateAssigned_SurveyInput {
	survey_id: String!
	assigned_to: String!
	assigned_by: String!
	assigned_date_time: AWSTimestamp!
	end_assignment: AWSTimestamp!
	frequency_of_survey_days: Int!
	answered_date_time: AWSTimestamp!
}

input CreateAssigned_TaskAchievementInput {
	user_id: String!
	taskachievement_id: String!
	assigned_date_time: AWSTimestamp!
	end_on: AWSTimestamp!
	is_completed: Int!
}

input CreateChannelInput {
	channel_type: String!
	channel_text: String!
	description: String!
	picture_filename: String!
	picture_data: String!
}

input CreateClientInput {
	address_id: String
	name: String!
	photo_filename: String!
	photo_data: String!
	industry: String!
	contact_first_name: String!
	contact_last_name: String!
	contact_email: String!
	contact_phone: String!
}

input CreateCommentInput {
	post_id: String!
	user_id: String!
	content: String!
	created_date_time: AWSTimestamp!
	edited_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp
}

input CreateCountryInput {
	name: String!
}

input CreateDepartmentInput {
	name: String!
	description: String!
}

input CreateMetricInput {
	metric_type: String!
	text: String!
	formula: String!
	is_archived: Int!
	answer_number: Int!
	answer_string: String!
}

input CreateModeratorInput {
	channel_id: String!
	user_id: String!
}

input CreateNotificationInput {
	name: String!
	notification_type: String!
	text: String!
}

input CreatePostInput {
	channel_id: String!
	user_id: String!
	content: String!
	created_date_time: AWSTimestamp!
	edited_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp!
}

input CreatePostcodeInput {
	region_id: String!
	postcode: String!
}

input CreateProjectInput {
	client_id: String!
	name: String!
	description: String!
}

input CreateProject_MetricInput {
	project_id: String!
	metric_id: String!
}

input CreateQuestionInput {
	created_by: String!
	question_type: String!
	question_text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp
	archived_date_time: AWSTimestamp
}

input CreateQuestion_AnswerInput {
	question_id: String!
	assigned_survey_id: String!
	user_id: String!
	is_anonymous: Int!
	answer_number: Int!
	answer_string: String!
	answered_date_time: AWSTimestamp!
}

input CreateRegionInput {
	country_id: String!
	name: String!
}

input CreateRewardInput {
	created_by: String!
	name: String!
	text: String!
	points: Int!
}

input CreateRoleInput {
	access_level: String!
	name: String!
	description: String!
}

input CreateSettingInput {
	name: String!
	setting_type: String!
	status: String!
	description: String!
}

input CreateSubscriptionInput {
	user_id: String!
	channel_id: String!
	notifications: String!
}

input CreateSurveyInput {
	created_by: String!
	text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp
	archived_date_time: AWSTimestamp
}

input CreateSurvey_QuestionInput {
	survey_id: String!
	question_id: String!
}

input CreateTaskAchievementInput {
	created_by: String!
	text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp!
}

input CreateTaskAchievement_RewardInput {
	taskachievement_id: String!
	reward_id: String!
}

input CreateTeamInput {
	team_manager: String!
	name: String!
	photo_filename: String!
	photo_data: String!
	description: String!
	is_archived: Int!
}

input CreateTeam_MembershipInput {
	user_id: String!
	team_id: String!
}

input CreateTeam_ProjectInput {
	team_id: String!
	project_id: String!
}

input CreateTeam_SurveyInput {
	team_id: String!
	assigned_survey_id: String!
}

input CreateUserInput {
	address_id: String
	user_role_id: String
	user_department_id: String
	email: String!
	phone: String!
	password: String!
	first_name: String!
	last_name: String!
	photo_filename: String!
	photo_data: String!
	birthday: AWSDate
	gender: String!
	is_archived: Int!
	description: String!
	speciality: String!
	working_from: String!
	points: Int!
}

input CreateUser_DepartmentInput {
	user_id: String!
	department_id: String!
}

input CreateUser_NotificationInput {
	user_id: String!
	notification_id: String!
	sent_date_time: AWSTimestamp!
	is_dismissed: Int!
}

input CreateUser_RoleInput {
	user_id: String!
	role_id: String!
}

input CreateUser_SettingInput {
	user_id: String!
	setting_id: String!
}

input DeleteAddressInput {
	id: ID!
}

input DeleteAssigned_SurveyInput {
	id: ID!
}

input DeleteAssigned_TaskAchievementInput {
	id: ID!
}

input DeleteChannelInput {
	id: ID!
}

input DeleteClientInput {
	id: ID!
}

input DeleteCommentInput {
	id: ID!
}

input DeleteCountryInput {
	id: ID!
}

input DeleteDepartmentInput {
	id: ID!
}

input DeleteMetricInput {
	id: ID!
}

input DeleteModeratorInput {
	id: ID!
}

input DeleteNotificationInput {
	id: ID!
}

input DeletePostInput {
	id: ID!
}

input DeletePostcodeInput {
	id: ID!
}

input DeleteProjectInput {
	id: ID!
}

input DeleteProject_MetricInput {
	id: ID!
}

input DeleteQuestionInput {
	id: ID!
}

input DeleteQuestion_AnswerInput {
	id: ID!
}

input DeleteRegionInput {
	id: ID!
}

input DeleteRewardInput {
	id: ID!
}

input DeleteRoleInput {
	id: ID!
}

input DeleteSettingInput {
	id: ID!
}

input DeleteSubscriptionInput {
	id: ID!
}

input DeleteSurveyInput {
	id: ID!
}

input DeleteSurvey_QuestionInput {
	id: ID!
}

input DeleteTaskAchievementInput {
	id: ID!
}

input DeleteTaskAchievement_RewardInput {
	id: ID!
}

input DeleteTeamInput {
	id: ID!
}

input DeleteTeam_MembershipInput {
	id: ID!
}

input DeleteTeam_ProjectInput {
	id: ID!
}

input DeleteTeam_SurveyInput {
	id: ID!
}

input DeleteUserInput {
	id: ID!
}

input DeleteUser_DepartmentInput {
	id: ID!
}

input DeleteUser_NotificationInput {
	id: ID!
}

input DeleteUser_RoleInput {
	id: ID!
}

input DeleteUser_SettingInput {
	id: ID!
}

type Department {
	id: ID!
	name: String!
	description: String!
}

type Metric {
	id: ID!
	metric_type: String!
	text: String!
	formula: String!
	is_archived: Int!
	answer_number: Int!
	answer_string: String!
}

type Moderator {
	id: ID!
	channel_id: String!
	user_id: String!
}

type Mutation {
	createMetric(input: CreateMetricInput!): Metric
	createProject_Metric(input: CreateProject_MetricInput!): Project_Metric
	createProject(input: CreateProjectInput!): Project
	createTeam_Project(input: CreateTeam_ProjectInput!): Team_Project
	createTeam(input: CreateTeamInput!): Team
	createTeam_Survey(input: CreateTeam_SurveyInput!): Team_Survey
	createAssigned_Survey(input: CreateAssigned_SurveyInput!): Assigned_Survey
	createSurvey(input: CreateSurveyInput!): Survey
	createSurvey_Question(input: CreateSurvey_QuestionInput!): Survey_Question
	createQuestion(input: CreateQuestionInput!): Question
	createQuestion_Answer(input: CreateQuestion_AnswerInput!): Question_Answer
	createTeam_Membership(input: CreateTeam_MembershipInput!): Team_Membership
	createClient(input: CreateClientInput!): Client
	createAddress(input: CreateAddressInput!): Address
	createPostcode(input: CreatePostcodeInput!): Postcode
	createRegion(input: CreateRegionInput!): Region
	createCountry(input: CreateCountryInput!): Country
	createUser(input: CreateUserInput!): User
	createUser_Role(input: CreateUser_RoleInput!): User_Role
	createRole(input: CreateRoleInput!): Role
	createUser_Department(input: CreateUser_DepartmentInput!): User_Department
	createDepartment(input: CreateDepartmentInput!): Department
	createAssigned_TaskAchievement(input: CreateAssigned_TaskAchievementInput!): Assigned_TaskAchievement
	createTaskAchievement(input: CreateTaskAchievementInput!): TaskAchievement
	createTaskAchievement_Reward(input: CreateTaskAchievement_RewardInput!): TaskAchievement_Reward
	createReward(input: CreateRewardInput!): Reward
	createUser_Setting(input: CreateUser_SettingInput!): User_Setting
	createSetting(input: CreateSettingInput!): Setting
	createUser_Notification(input: CreateUser_NotificationInput!): User_Notification
	createNotification(input: CreateNotificationInput!): Notification
	createModerator(input: CreateModeratorInput!): Moderator
	createSubscription(input: CreateSubscriptionInput!): Subscription
	createChannel(input: CreateChannelInput!): Channel
	createPost(input: CreatePostInput!): Post
	createComment(input: CreateCommentInput!): Comment
	updateMetric(input: CreateMetricInput!): Metric
	updateProject_Metric(input: CreateProject_MetricInput!): Project_Metric
	updateProject(input: CreateProjectInput!): Project
	updateTeam_Project(input: CreateTeam_ProjectInput!): Team_Project
	updateTeam(input: CreateTeamInput!): Team
	updateTeam_Survey(input: CreateTeam_SurveyInput!): Team_Survey
	updateAssigned_Survey(input: CreateAssigned_SurveyInput!): Assigned_Survey
	updateSurvey(input: CreateSurveyInput!): Survey
	updateSurvey_Question(input: CreateSurvey_QuestionInput!): Survey_Question
	updateQuestion(input: CreateQuestionInput!): Question
	updateQuestion_Answer(input: CreateQuestion_AnswerInput!): Question_Answer
	updateTeam_Membership(input: CreateTeam_MembershipInput!): Team_Membership
	updateClient(input: CreateClientInput!): Client
	updateAddress(input: CreateAddressInput!): Address
	updatePostcode(input: CreatePostcodeInput!): Postcode
	updateRegion(input: CreateRegionInput!): Region
	updateCountry(input: CreateCountryInput!): Country
	updateUser(input: CreateUserInput!): User
	updateUser_Role(input: CreateUser_RoleInput!): User_Role
	updateRole(input: CreateRoleInput!): Role
	updateUser_Department(input: CreateUser_DepartmentInput!): User_Department
	updateDepartment(input: CreateDepartmentInput!): Department
	updateAssigned_TaskAchievement(input: CreateAssigned_TaskAchievementInput!): Assigned_TaskAchievement
	updateTaskAchievement(input: CreateTaskAchievementInput!): TaskAchievement
	updateTaskAchievement_Reward(input: CreateTaskAchievement_RewardInput!): TaskAchievement_Reward
	updateReward(input: CreateRewardInput!): Reward
	updateUser_Setting(input: CreateUser_SettingInput!): User_Setting
	updateSetting(input: CreateSettingInput!): Setting
	updateUser_Notification(input: CreateUser_NotificationInput!): User_Notification
	updateNotification(input: CreateNotificationInput!): Notification
	updateModerator(input: CreateModeratorInput!): Moderator
	updateSubscription(input: CreateSubscriptionInput!): Subscription
	updateChannel(input: CreateChannelInput!): Channel
	updatePost(input: CreatePostInput!): Post
	updateComment(input: CreateCommentInput!): Comment
	deleteMetric(input: DeleteMetricInput!): Metric
	deleteProject_Metric(input: DeleteProject_MetricInput!): Project_Metric
	deleteProject(input: DeleteProjectInput!): Project
	deleteTeam_Project(input: DeleteTeam_ProjectInput!): Team_Project
	deleteTeam(input: DeleteTeamInput!): Team
	deleteTeam_Survey(input: DeleteTeam_SurveyInput!): Team_Survey
	deleteAssigned_Survey(input: DeleteAssigned_SurveyInput!): Assigned_Survey
	deleteSurvey(input: DeleteSurveyInput!): Survey
	deleteSurvey_Question(input: DeleteSurvey_QuestionInput!): Survey_Question
	deleteQuestion(input: DeleteQuestionInput!): Question
	deleteQuestion_Answer(input: DeleteQuestion_AnswerInput!): Question_Answer
	deleteTeam_Membership(input: DeleteTeam_MembershipInput!): Team_Membership
	deleteClient(input: DeleteClientInput!): Client
	deleteAddress(input: DeleteAddressInput!): Address
	deletePostcode(input: DeletePostcodeInput!): Postcode
	deleteRegion(input: DeleteRegionInput!): Region
	deleteCountry(input: DeleteCountryInput!): Country
	deleteUser(input: DeleteUserInput!): User
	deleteUser_Role(input: DeleteUser_RoleInput!): User_Role
	deleteRole(input: DeleteRoleInput!): Role
	deleteUser_Department(input: DeleteUser_DepartmentInput!): User_Department
	deleteDepartment(input: DeleteDepartmentInput!): Department
	deleteAssigned_TaskAchievement(input: DeleteAssigned_TaskAchievementInput!): Assigned_TaskAchievement
	deleteTaskAchievement(input: DeleteTaskAchievementInput!): TaskAchievement
	deleteTaskAchievement_Reward(input: DeleteTaskAchievement_RewardInput!): TaskAchievement_Reward
	deleteReward(input: DeleteRewardInput!): Reward
	deleteUser_Setting(input: DeleteUser_SettingInput!): User_Setting
	deleteSetting(input: DeleteSettingInput!): Setting
	deleteUser_Notification(input: DeleteUser_NotificationInput!): User_Notification
	deleteNotification(input: DeleteNotificationInput!): Notification
	deleteModerator(input: DeleteModeratorInput!): Moderator
	deleteSubscription(input: DeleteSubscriptionInput!): Subscription
	deleteChannel(input: DeleteChannelInput!): Channel
	deletePost(input: DeletePostInput!): Post
	deleteComment(input: DeleteCommentInput!): Comment
}

type Notification {
	id: ID!
	name: String!
	notification_type: String!
	text: String!
}

type Post {
	id: ID!
	channel_id: String!
	user_id: String!
	content: String!
	created_date_time: AWSTimestamp!
	edited_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp!
}

type Postcode {
	id: ID!
	region_id: String!
	postcode: String!
}

type Project {
	id: ID!
	client_id: String!
	name: String!
	description: String!
}

type Project_Metric {
	id: ID!
	project_id: String!
	metric_id: String!
}

type Query {
	getMetric(id: ID!): Metric
	getProject_Metric(id: ID!): Project_Metric
	getProject(id: ID!): Project
	getTeam_Project(id: ID!): Team_Project
	getTeam(id: ID!): Team
	getTeam_Survey(id: ID!): Team_Survey
	getAssigned_Survey(id: ID!): Assigned_Survey
	getSurvey(id: ID!): Survey
	getSurvey_Question(id: ID!): Survey_Question
	getQuestion(id: ID!): Question
	getQuestion_Answer(id: ID!): Question_Answer
	getTeam_Membership(id: ID!): Team_Membership
	getClient(id: ID!): Client
	getAddress(id: ID!): Address
	getPostcode(id: ID!): Postcode
	getRegion(id: ID!): Region
	getCountry(id: ID!): Country
	getUser(id: ID!): User
	getUser_Role(id: ID!): User_Role
	getRole(id: ID!): Role
	getUser_Department(id: ID!): User_Department
	getDepartment(id: ID!): Department
	getAssigned_TaskAchievement(id: ID!): Assigned_TaskAchievement
	getTaskAchievement(id: ID!): TaskAchievement
	getTaskAchievement_Reward(id: ID!): TaskAchievement_Reward
	getReward(id: ID!): Reward
	getUser_Setting(id: ID!): User_Setting
	getSetting(id: ID!): Setting
	getUser_Notification(id: ID!): User_Notification
	getNotification(id: ID!): Notification
	getModerator(id: ID!): Moderator
	getSubscription(id: ID!): Subscription
	getChannel(id: ID!): Channel
	getPost(id: ID!): Post
	getComment(id: ID!): Comment
	listMetrics: [Metric]
	listProject_Metrics: [Project_Metric]
	listProjects: [Project]
	listTeam_Projects: [Team_Project]
	listTeams: [Team]
	listTeam_Surveys: [Team_Survey]
	listAssigned_Surveys: [Assigned_Survey]
	listSurveys: [Survey]
	listSurvey_Questions: [Survey_Question]
	listQuestions: [Question]
	listQuestion_Answers: [Question_Answer]
	listTeam_Memberships: [Team_Membership]
	listClients: [Client]
	listAddresses: [Address]
	listPostcodes: [Postcode]
	listRegions: [Region]
	listCountries: [Country]
	listUsers: [User]
	listUser_Roles: [User_Role]
	listRoles: [Role]
	listUser_Departments: [User_Department]
	listDepartments: [Department]
	listAssigned_TaskAchievements: [Assigned_TaskAchievement]
	listTaskAchievements: [TaskAchievement]
	listTaskAchievement_Rewards: [TaskAchievement_Reward]
	listRewards: [Reward]
	listUser_Settings: [User_Setting]
	listSettings: [Setting]
	listUser_Notifications: [User_Notification]
	listNotifications: [Notification]
	listModerators: [Moderator]
	listSubscriptions: [Subscription]
	listChannels: [Channel]
	listPosts: [Post]
	listComments: [Comment]
}

type Question {
	id: ID!
	created_by: String!
	question_type: String!
	question_text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp
	archived_date_time: AWSTimestamp
}

type Question_Answer {
	id: ID!
	question_id: String!
	assigned_survey_id: String!
	user_id: String!
	is_anonymous: Int!
	answer_number: Int!
	answer_string: String!
	answered_date_time: AWSTimestamp!
}

type Region {
	id: ID!
	country_id: String!
	name: String!
}

type Reward {
	id: ID!
	created_by: String!
	name: String!
	text: String!
	points: Int!
}

type Role {
	id: ID!
	access_level: String!
	name: String!
	description: String!
}

type Setting {
	id: ID!
	name: String!
	setting_type: String!
	status: String!
	description: String!
}

type Subscription {
	id: ID!
	user_id: String!
	channel_id: String!
	notifications: String!
}

type Survey {
	id: ID!
	created_by: String!
	text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp
	archived_date_time: AWSTimestamp
}

type Survey_Question {
	id: ID!
	survey_id: String!
	question_id: String!
}

type TaskAchievement {
	id: ID!
	created_by: String!
	text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp!
}

type TaskAchievement_Reward {
	id: ID!
	taskachievement_id: String!
	reward_id: String!
}

type Team {
	id: ID!
	team_manager: String!
	name: String!
	photo_filename: String!
	photo_data: String!
	description: String!
	is_archived: Int!
}

type Team_Membership {
	id: ID!
	user_id: String!
	team_id: String!
}

type Team_Project {
	id: ID!
	team_id: String!
	project_id: String!
}

type Team_Survey {
	id: ID!
	team_id: String!
	assigned_survey_id: String!
}

input UpdateAddressInput {
	id: ID!
	client_id: String
	postcode_id: String!
	street_number: String!
	street_name: String!
	apartment_number: String!
	level: String!
	photo_filename: String!
	photo_data: String!
}

input UpdateAssigned_SurveyInput {
	id: ID!
	survey_id: String!
	assigned_to: String!
	assigned_by: String!
	assigned_date_time: AWSTimestamp!
	end_assignment: AWSTimestamp!
	frequency_of_survey_days: Int!
	answered_date_time: AWSTimestamp!
}

input UpdateAssigned_TaskAchievementInput {
	id: ID!
	user_id: String!
	taskachievement_id: String!
	assigned_date_time: AWSTimestamp!
	end_on: AWSTimestamp!
	is_completed: Int!
}

input UpdateChannelInput {
	id: ID!
	channel_type: String!
	channel_text: String!
	description: String!
	picture_filename: String!
	picture_data: String!
}

input UpdateClientInput {
	id: ID!
	address_id: String
	name: String!
	photo_filename: String!
	photo_data: String!
	industry: String!
	contact_first_name: String!
	contact_last_name: String!
	contact_email: String!
	contact_phone: String!
}

input UpdateCommentInput {
	id: ID!
	post_id: String!
	user_id: String!
	content: String!
	created_date_time: AWSTimestamp!
	edited_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp
}

input UpdateCountryInput {
	id: ID!
	name: String!
}

input UpdateDepartmentInput {
	id: ID!
	name: String!
	description: String!
}

input UpdateMetricInput {
	id: ID!
	metric_type: String!
	text: String!
	formula: String!
	is_archived: Int!
	answer_number: Int!
	answer_string: String!
}

input UpdateModeratorInput {
	id: ID!
	channel_id: String!
	user_id: String!
}

input UpdateNotificationInput {
	id: ID!
	name: String!
	notification_type: String!
	text: String!
}

input UpdatePostInput {
	id: ID!
	channel_id: String!
	user_id: String!
	content: String!
	created_date_time: AWSTimestamp!
	edited_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp!
}

input UpdatePostcodeInput {
	id: ID!
	region_id: String!
	postcode: String!
}

input UpdateProjectInput {
	id: ID!
	client_id: String!
	name: String!
	description: String!
}

input UpdateProject_MetricInput {
	id: ID!
	project_id: String!
	metric_id: String!
}

input UpdateQuestionInput {
	id: ID!
	created_by: String!
	question_type: String!
	question_text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp
	archived_date_time: AWSTimestamp
}

input UpdateQuestion_AnswerInput {
	id: ID!
	question_id: String!
	assigned_survey_id: String!
	user_id: String!
	is_anonymous: Int!
	answer_number: Int!
	answer_string: String!
	answered_date_time: AWSTimestamp!
}

input UpdateRegionInput {
	id: ID!
	country_id: String!
	name: String!
}

input UpdateRewardInput {
	id: ID!
	created_by: String!
	name: String!
	text: String!
	points: Int!
}

input UpdateRoleInput {
	id: ID!
	access_level: String!
	name: String!
	description: String!
}

input UpdateSettingInput {
	id: ID!
	name: String!
	setting_type: String!
	status: String!
	description: String!
}

input UpdateSubscriptionInput {
	id: ID!
	user_id: String!
	channel_id: String!
	notifications: String!
}

input UpdateSurveyInput {
	id: ID!
	created_by: String!
	text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp
	archived_date_time: AWSTimestamp
}

input UpdateSurvey_QuestionInput {
	id: ID!
	survey_id: String!
	question_id: String!
}

input UpdateTaskAchievementInput {
	id: ID!
	created_by: String!
	text: String!
	is_archived: Int!
	created_date_time: AWSTimestamp!
	archived_date_time: AWSTimestamp!
}

input UpdateTaskAchievement_RewardInput {
	id: ID!
	taskachievement_id: String!
	reward_id: String!
}

input UpdateTeamInput {
	id: ID!
	team_manager: String!
	name: String!
	photo_filename: String!
	photo_data: String!
	description: String!
	is_archived: Int!
}

input UpdateTeam_MembershipInput {
	id: ID!
	user_id: String!
	team_id: String!
}

input UpdateTeam_ProjectInput {
	id: ID!
	team_id: String!
	project_id: String!
}

input UpdateTeam_SurveyInput {
	id: ID!
	team_id: String!
	assigned_survey_id: String!
}

input UpdateUserInput {
	id: ID!
	address_id: String
	user_role_id: String
	user_department_id: String
	email: String!
	phone: String!
	password: String!
	first_name: String!
	last_name: String!
	photo_filename: String!
	photo_data: String!
	birthday: AWSDate
	gender: String!
	is_archived: Int!
	description: String!
	speciality: String!
	working_from: String!
	points: Int!
}

input UpdateUser_DepartmentInput {
	id: ID!
	user_id: String!
	department_id: String!
}

input UpdateUser_NotificationInput {
	id: ID!
	user_id: String!
	notification_id: String!
	sent_date_time: AWSTimestamp!
	is_dismissed: Int!
}

input UpdateUser_RoleInput {
	id: ID!
	user_id: String!
	role_id: String!
}

input UpdateUser_SettingInput {
	id: ID!
	user_id: String!
	setting_id: String!
}

type User {
	id: ID!
	address_id: String
	user_role_id: String
	user_department_id: String
	email: String!
	phone: String!
	password: String!
	first_name: String!
	last_name: String!
	photo_filename: String!
	photo_data: String!
	birthday: AWSDate
	gender: String!
	is_archived: Int!
	description: String!
	speciality: String!
	working_from: String!
	points: Int!
}

type User_Department {
	id: ID!
	user_id: String!
	department_id: String!
}

type User_Notification {
	id: ID!
	user_id: String!
	notification_id: String!
	sent_date_time: AWSTimestamp!
	is_dismissed: Int!
}

type User_Role {
	id: ID!
	user_id: String!
	role_id: String!
}

type User_Setting {
	id: ID!
	user_id: String!
	setting_id: String!
}

schema {
	query: Query
	mutation: Mutation
}